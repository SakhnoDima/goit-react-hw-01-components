{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/GoIt/React/DZ/goit-react-hw-01-components/src/components/TransactionHistory/TransactionHistory.jsx\";\nimport { PropTypes, bool } from \"prop-types\";\nimport { TransactionItem } from \"./TransactionHistoryItem\";\nimport { Table, TableHead, TableHeadItem } from \"./Transaction.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionHistory = _ref => {\n  let {\n    items = []\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(TableHead, {\n        children: [/*#__PURE__*/_jsxDEV(TableHeadItem, {\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableHeadItem, {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableHeadItem, {\n          children: \"Currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: items.map(item => {\n        const color = generateAlternateBoolean();\n        return /*#__PURE__*/_jsxDEV(TransactionItem, {\n          type: item.type,\n          amount: item.amount,\n          currency: item.currency,\n          bool: color\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n};\n_c = TransactionHistory;\nTransactionHistory.propTypes = {\n  item: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionHistory\");","map":{"version":3,"sources":["/Users/admin/Desktop/GoIt/React/DZ/goit-react-hw-01-components/src/components/TransactionHistory/TransactionHistory.jsx"],"names":["PropTypes","bool","TransactionItem","Table","TableHead","TableHeadItem","TransactionHistory","items","map","item","color","generateAlternateBoolean","type","amount","currency","id","propTypes","arrayOf","shape","string","isRequired"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,YAAhC;AAEA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,sBAAhD;;AAGA,OAAO,MAAMC,kBAAkB,GAAG,QAAmB;AAAA,MAAlB;AAAEC,IAAAA,KAAK,GAAE;AAAT,GAAkB;AACjD,sBAAO,QAAC,KAAD;AAAA,4BACP;AAAA,6BACE,QAAC,SAAD;AAAA,gCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADO,eASP;AAAA,gBACKA,KAAK,CAACC,GAAN,CAAWC,IAAI,IAAI;AAClB,cAAMC,KAAK,GAAGC,wBAAwB,EAAtC;AACA,4BACA,QAAC,eAAD;AAEA,UAAA,IAAI,EAAEF,IAAI,CAACG,IAFX;AAGA,UAAA,MAAM,EAAEH,IAAI,CAACI,MAHb;AAIA,UAAA,QAAQ,EAAEJ,IAAI,CAACK,QAJf;AAKA,UAAA,IAAI,EAAEJ;AALN,WACKD,IAAI,CAACM,EADV;AAAA;AAAA;AAAA;AAAA,gBADA;AASA,OAXD;AADL;AAAA;AAAA;AAAA;AAAA,YATO;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAwBH,CAzBM;KAAMT,kB;AA2BbA,kBAAkB,CAACU,SAAnB,GAA8B;AAC1BP,EAAAA,IAAI,EAAGT,SAAS,CAACiB,OAAV,CAAkBjB,SAAS,CAACkB,KAAV,CAAgB;AACrCH,IAAAA,EAAE,EAAGf,SAAS,CAACmB,MAAV,CAAiBC;AADe,GAAhB,CAAlB;AADmB,CAA9B","sourcesContent":["import { PropTypes, bool } from \"prop-types\";\n\nimport { TransactionItem } from \"./TransactionHistoryItem\";\nimport { Table, TableHead, TableHeadItem } from \"./Transaction.styled\";\n\n\nexport const TransactionHistory = ({ items =[] }) => {\n    return <Table>\n    <thead>\n      <TableHead>\n        <TableHeadItem>Type</TableHeadItem>\n        <TableHeadItem>Amount</TableHeadItem>\n        <TableHeadItem>Currency</TableHeadItem>\n      </TableHead>\n    </thead>\n  \n    <tbody>\n        {items.map((item => {\n          const color = generateAlternateBoolean()\n          return (\n          <TransactionItem \n          key={item.id}\n          type={item.type}\n          amount={item.amount}\n          currency={item.currency}\n          bool={color}\n          />\n         \n        )}))}\n    </tbody>\n  </Table>\n} \n\nTransactionHistory.propTypes ={\n    item : PropTypes.arrayOf(PropTypes.shape({\n        id : PropTypes.string.isRequired,\n    }))\n}"]},"metadata":{},"sourceType":"module"}